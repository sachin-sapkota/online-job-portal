// import React, { useState } from 'react';
// import { FiSettings } from 'react-icons/fi'
// import Content from '../components/Admin/Content'

// const Admin = () => {
//   const [activePage, setActivePage] = useState("Mcqs")

//   return (
//     <div className="font-sans text-lg h-full w-full grid grid-cols-1 md:grid-cols-5 ">
//       <Sidenav activePage={activePage} setActivePage={setActivePage} />
//       <Content activePage={activePage} setActivePage={setActivePage} />
//     </div>
//   );
// }

// const Sidenav = ({ activePage, setActivePage }) => (
//   <div className="max-h-[30vh] md:max-h-full flex flex-col bg-blue-50 px-6 py-4 relative">
//     <SidenavHeader />
//     <SidenavMenu activePage={activePage} setActivePage={setActivePage} />
//     <SidenavFooter />
//   </div>
// );

// const SidenavHeader = () => (
//   <div className="flex items-center ml-1 pb-8">
//     <div className="select-none md:flex min-w-[100px] max-w-[120px] mb-3 ">
//       <img src="aakhyaanText.png"></img>
//     </div>
//   </div>
// );

// const SidenavMenu = ({ activePage, setActivePage }) => (
//   <nav className="space-y-2">
//     {/* <NavItem activePage={activePage} link="#dashboard" title="Dashboard" setActivePage={setActivePage} /> */}
//     <NavItem activePage={activePage} link="#mcqs" title="Mcqs" setActivePage={setActivePage} />
//     <NavItem activePage={activePage} link="#courses" title="Courses" setActivePage={setActivePage} />
//     {/* <NavItem activePage={activePage} link="#users" title="Users" setActivePage={setActivePage} /> */}
//   </nav>
// );

// const NavItem = ({ activePage, link, title, setActivePage }) => (
//   <a onClick={() => setActivePage(title)} href={link} className={`flex items-center no-underline p-3 rounded-md ${activePage === title ? 'bg-green-500 cursor-default' : 'transition-all hover:text-blue-800 hover:translate-x-0.5 hover:translate-y-0.5'}`}>
//     <div className="font-bold pl-3">{title}</div>
//   </a>
// );

// const SidenavFooter = () => (
//   <div className=''>
//     <a href="#settings" className="mt-4 text-xl text-blue-500 transition-all hover:text-black flex items-center px-3 no-underline opacity-70 hover:opacity-100">
//       <FiSettings />
//       <div className="pl-2">Settings</div>
//     </a>
//     <p className="md:absolute md:bottom-0 text-center text-gray-500 text-xs mt-2 md:mb-5">
//       Aakhyaan © 2022 aakhyaan.org. All Rights Reserved
//     </p>
//   </div>
// );


// export default Admin



// import React from 'react'
// import { Link } from 'react-router-dom'

// export default function () {

//   return (
//     <div className='w-full h-full flex'>
//         <div className='m-auto flex flex-col p-10'>
//             <div className='max-w-[250px]'>
//                 <img src="aakhyaanText.png"></img>
//             </div>
//             <span className='font-sans'>
//                 <span className='font-bold'>404</span>. That's an error
//             </span>
//             <span className='mt-5 font-sans'>
//             The requested URL {window.location.href.replace("http://localhost:3000","")} was not found on this server. <span className='font-thin'>That’s all we know.</span>
//             </span>
//             <Link to="/" className="mt-5 font-sans text-xl hover:underline transition-all text-blue-600">
//                 Goto Home
//             </Link>
//         </div>
//     </div>
//   )
// }






// import React, { useEffect, useState } from "react";
// import { useNavigate, Link } from "react-router-dom";
// import Header from "../components//Header";
// import { loginUser } from '../api/User'
// import { getProfile } from '../api/Profile'
// import { Avatar } from '@mui/material'

// function Login() {
//   const [logged, setLogged] = useState(JSON.parse(localStorage.getItem("logged")))
//   const [user, setUser] = useState({
//     email: "",
//     password: ""
//   })

//   const [loggedUser, setLoggedUser] = useState({
//     username: "",
//     avatar: ""
//   })

//   const [errorMessage, setErrorMessage] = useState("")

//   //   const history = useHistory();
//   const navigate = useNavigate();

//   const handleSubmit = async (event) => {
//     event.preventDefault();
//     const data = await loginUser("/user/login/", user)
//     if (typeof data !== typeof undefined) {
//       if (data.success) {
//         localStorage.setItem("token", data.token)
//         localStorage.setItem("logged", data.success)
//         navigate("/");
//       } else {
//         setErrorMessage(data.message)
//       }
//     }
//   }

//   useEffect(() => {
//     async function getData(){
//       const data = await getProfile("/user")
//       if(typeof data !== typeof undefined){
//         setLoggedUser({username:data.firstName+" "+data.lastName, avatar:data.profilePicture})
//       }
//     }
//     getData()
//   }, [])

//   return (
//     <>
//       <Header page="login" />
//       {logged ?
//         <div className="w-full h-full flex items-center justify-center gap-20 pl-10 pr-10">
//           <div className="flex flex-col gap-3 items-center">
//             <div className="font-sans text-red-800">
//               Hey, you are already logged in as
//             </div>
//             <div className="bg-blue-50 flex flex-col gap-3 md:border-2 shadow-lg p-10">
//               <div className="hover:cursor-pointer flex flex-col md:flex-row items-center gap-4 md:gap-10">
//                 <div onClick={() => {
//                   navigate('/')
//                 }} className="flex items-center gap-2">
//                   <div><Avatar alt="" src={loggedUser.avatar} /></div>
//                   <div className="font-sans text-blue-900 text-xl hover:underline">
//                     {loggedUser.username}
//                   </div>
//                 </div>
//                 <div className="flex justify-end">
//                   <Link to="/" onClick={() => {
//                     setLogged(false)
//                     localStorage.removeItem("token")
//                     localStorage.removeItem("logged")
//                   }} className={` font-sans hover:underline`}>Log Out</Link>
//                 </div>
//               </div>
//             </div>
//           </div>
//         </div>

//         : <div className="w-full h-full flex items-center justify-center gap-20 p-20">
//           <div className="select-none hidden md:flex min-w-[400px] max-w-[550px]">
//             <img src="teaching1.svg"></img>
//           </div>
//           <div className="w-full max-w-xs md:max-w-md flex flex-col gap-10 items-center">
//             <div>
//               <form className="md:bg-blue-50 md:shadow-md rounded px-12 py-8 mb-4" onSubmit={handleSubmit}>
//                 <div className="float-right select-none md:flex min-w-[100px] max-w-[120px] mb-3 ">
//                   <img src="aakhyaanText.png"></img>
//                 </div>
//                 <div className="mb-4 clear-both">
//                   <label className="block text-gray-700 font-sans text-lg mb-2" htmlFor="email">
//                     Email
//                   </label>
//                   <input className="font-sans shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-blue-600 focus:shadow-none" id="username" type="text" placeholder="Email"
//                     value={user.email}
//                     onChange={(e) =>
//                       setUser((prev) => {
//                         return { ...prev, email: e.target.value };
//                       })} required />
//                 </div>
//                 <div className="mb-4">
//                   <label className="block font-sans text-lg text-gray-700 mb-2" htmlFor="password">
//                     Password
//                   </label>
//                   <input className="font-sans shadow border border-red-500 rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-blue-800 focus:shadow-none" id="password" type="password" placeholder="Password"
//                     value={user.password}
//                     onChange={(e) =>
//                       setUser((prev) => {
//                         return { ...prev, password: e.target.value };
//                       })} required />
//                 </div>
//                 <div className="mb-4 font-sans tracking-wide text-center text-red-500">
//                   {errorMessage}
//                 </div>
//                 <div className="flex flex-col gap-5 md:gap-7">
//                   <div className="flex justify-center md:justify-start">
//                     <button className="font-sans text-lg hover:-translate-y-0.5 transition-all bg-blue-500 hover:bg-blue-700 text-white py-2 px-4 rounded focus:outline-none focus:shadow-outline" type="submit">
//                       Login
//                     </button>
//                   </div>
//                   <div className="flex flex-col md:flex-row gap-4 md:gap-2 items-center">
//                     <div className="font-sans text-lg text-slate-500 text-center">
//                       Haven't got an account?
//                     </div>
//                     <Link to="/signup" className="font-sans text-xl hover:underline transition-all text-blue-600">
//                       Sign Up
//                     </Link>
//                   </div>
//                   <Link to="/htmlForgot" className="text-center md:text-left font-sans inline-block align-baseline text-lg text-blue-500 hover:text-blue-800" href="#">
//                     Forgot Password?
//                   </Link>
//                 </div>
//               </form>
//               <p className="text-center text-gray-500 text-xs">
//                 Aakhyaan © 2022 aakhyaan.org. All Rights Reserved
//               </p>

//             </div>
//           </div>
//         </div>
//       }
//     </>
//   );
// }

// export default Login;








// import React, { useEffect, useState } from 'react'
// import Header from "../components/Header"
// import { IoMdCall } from 'react-icons/io'
// import { MdOutlineEmail } from 'react-icons/md'
// import useSWR from 'swr'
// import { getProfile } from '../api/Profile'
// import { BiEditAlt } from 'react-icons/bi'

// export default function Profile() {
//     const [editMode, setEditMode] = useState(false)
//     const [active, setActive] = useState("Profile")
//     const { data, error } = useSWR("/user", async url => await getProfile(url))
//     const [profile, setProfile] = useState(data?data:{})
//     return (
//         <>
//             <Header page="profile" />
//             <div className='w-full h-full flex pt-[6vh] md:pt-[7vh]'>
//                 <div className='flex flex-col w-full'>
//                     <div className='bg-gray-100 shadow-sm p-24 pl-10 pr-10 flex-col flex md:flex-row items-center gap-5 font-sans tracking-wide'>
//                         <div className='flex justify-center items-center text-center relative min-w-[90px] min-h-[90px] bg-blue-50 shadow-lg'>
//                             <img src={data?.profilePicture} alt='Profile'></img>
//                         </div>
//                         <div className='flex flex-col items-center md:items-start gap-2'>
//                             <div className='gap-0 flex flex-col items-center md:items-start'>
//                                 <span className='text-lg'>{data?.firstName ? data.firstName + " " + data.lastName : "Unknown"}</span>
//                                 <span className='italic'>{data?.type}</span>
//                             </div>
//                             <div className='flex items-center md:items-start flex-col text-blue-500 text-sm'>
//                                 <div className='flex flex-col md:flex-row items-center md:gap-2'>
//                                     <div className='flex items-center gap-1'>
//                                         <MdOutlineEmail />
//                                         <span>{data?.email ? data.email : "Unknown"}</span>
//                                     </div>
//                                     <div className='mb-2 md:mb-0 text-red-800 hover:cursor-pointer hover:underline'>{data?.isverified?"": "Verify email"}</div>
//                                 </div>
//                                 <div className='flex items-center gap-1'>
//                                     <IoMdCall />
//                                     <span>{data?.phone ? data.phone : "Unknown"}</span>
//                                 </div>
//                             </div>
//                         </div>
//                         <div>
//                             <button onClick={()=>setEditMode(true)} className="md:ml-20 flex items-center transition duration-200 outline-2 text-primary outline font-sans outline-blue-400 rounded-lg  hover:bg-blue-500 hover:text-white px-3 py-1 text-xl">
//                                 <span>Edit</span>
//                                 <BiEditAlt />
//                             </button>
//                         </div>
//                     </div>
//                     <div className='flex flex-col'>
//                         <div className='flex items-center gap-5 p-8 border-b-2 font-sans'>
//                             <span className={`${active === "Profile" ? "text-blue-800 -translate-y-0.5 text-lg" : ""} hover:cursor-pointer`} onClick={() => setActive("Profile")}>Profile</span>
//                             <span className={`${active === "Solved Mcqs" ? "text-blue-800 -translate-y-0.5 text-lg" : ""} hover:cursor-pointer`} onClick={() => setActive("Solved Mcqs")}>Solved Mcqs</span>
//                         </div>
//                     </div>
//                     <div className='p-8'>
//                         {active === "Profile" ? <ProfileData data={data} /> : null}
//                         {active === "Solved Mcqs" ? <SolvedMcqs /> : null}
//                     </div>
//                 </div>
//             </div>
//         </>
//     )
// }


// const ProfileData = ({ data }) => {
//     return (
//         <div className='grid md:grid-cols-2 gap-20 font-sans'>
//             <div className='flex flex-col gap-5'>
//                 <div className='border-b-2 text-xl font-medium'>
//                     Personal Information
//                 </div>
//                 <div className='flex flex-col gap-5'>
//                     <div className='flex flex-col'>
//                         <span className='text-lg text-slate-800'>Age</span>
//                         <span className="font-light ">{data?.age ? data.age : "Unknown"}</span>
//                     </div>
//                     <div className='flex flex-col'>
//                         <span className='text-lg text-slate-800'>College</span>
//                         <span className="font-light ">{data?.college ? data.college : "Unknown"}</span>
//                     </div>
//                 </div>
//             </div>
//             <div className='flex flex-col gap-5'>
//                 <div className='border-b-2 text-xl font-medium'>
//                     Location
//                 </div>
//                 <div className='flex flex-col gap-5'>
//                     <div className='flex flex-col'>
//                         <span className='text-lg text-slate-800'>Country</span>
//                         <span className="font-light ">Nepal</span>
//                     </div>
//                     <div className='flex flex-col'>
//                         <span className='text-lg text-slate-800'>Address</span>
//                         <span className="font-light ">{data?.address ? data.address : "Unknown"}</span>
//                     </div>
//                 </div>
//             </div>
//             <div className='flex flex-col gap-5'>
//                 <div className='border-b-2 text-xl font-medium'>
//                     Contact Information
//                 </div>
//                 <div className='flex flex-col gap-5'>
//                     <div className='flex flex-col'>
//                         <span className='text-lg text-slate-800'>Phone</span>
//                         <span className="font-light ">{data?.phone ? data.phone : "Unknown"}</span>
//                     </div>
//                     <div className='flex flex-col'>
//                         <span className='text-lg text-slate-800'>Email</span>
//                         <span className="font-light ">{data?.email ? data.email : "Unknown"}</span>
//                     </div>
//                 </div>
//             </div>
//         </div>
//     )
// }

// const SolvedMcqs = () => {
//     return (
//         <div className='font-sans'>
//             <div className='flex flex-col gap-5'>
//                 <div>Mcq Set 1</div>
//                 <div>Mcq Set 2</div>
//                 <div>Mcq Set 3</div>
//             </div>
//         </div>
//     )
// }






// import React, { useState, useEffect } from "react"
// import { useNavigate, Link } from "react-router-dom"
// import Header from "../components/Header"
// import { createUser, verifyUser } from '../api/User'
// import { getProfile } from '../api/Profile'
// import { Avatar } from '@mui/material'

// function Login() {
//     const [verification, setVerification] = useState(false)
//     const [token, setToken] = useState("")
//     const [logged, setLogged] = useState(JSON.parse(localStorage.getItem("logged")))
//     const [pass, setPass] = useState({ pass1: "", pass2: "" })
//     const [user, setUser] = useState({
//         firstName: "",
//         middleName: "",
//         lastName: "",
//         email: "",
//         phone: "",
//         school: "",
//         address: "",
//         password: "",
//     });

//     const [loggedUser, setLoggedUser] = useState({
//         username: "",
//         avatar: ""
//       })

//     const [errorMessage, setErrorMessage] = useState("")

//     //   const history = useHistory();required
//     const navigate = useNavigate();

//     const handleSubmit = async (e) => {
//         e.preventDefault();
//         if (pass.pass1 !== pass.pass2) {
//             setErrorMessage("Your passwords don't match")
//         } else {
//             const data = await createUser("/user/create/", user)
//             if (typeof data !== typeof undefined) {
//                 if (data.success) {
//                     setVerification(true)
//                 } else {
//                     setErrorMessage(data.message)
//                 }
//             }
//         }
//     }

//     const resendVerification = async (e) => {
//         e.preventDefault();

//     }
//     const submitVerification = async (e) => {
//         e.preventDefault();
//         const data = await verifyUser("/user/verify-email", { token: token })
//     }

//     useEffect(() => {
//         async function getData(){
//           const data = await getProfile("/user")
//           if(typeof data !== typeof undefined){
//             setLoggedUser({username:data.firstName+" "+data.lastName, avatar:data.profilePicture})
//           }
//         }
//         getData()
//       }, [])

//     return (
//         <>
//             <Header page="signup" />
//             {logged ?
//                 <div className="w-full h-full flex items-center justify-center gap-20 pl-10 pr-10">
//                     <div className="flex flex-col gap-3 items-center">
//                         <div className="font-sans text-red-800">
//                             Hey, you are already logged in as
//                         </div>
//                         <div className="bg-blue-50 flex flex-col gap-3 md:border-2 shadow-lg p-10">
//                             <div className="hover:cursor-pointer flex flex-col md:flex-row items-center gap-4 md:gap-10">
//                                 <div onClick={() => {
//                                     navigate('/')
//                                 }} className="flex items-center gap-2">
//                                     <div><Avatar alt="" src={loggedUser.avatar} /></div>
//                                     <div className="font-sans text-blue-900 text-xl hover:underline">
//                                         {loggedUser.username}
//                                     </div>
//                                 </div>
//                                 <div className="flex justify-end">
//                                     <Link to="/" onClick={() => {
//                                         setLogged(false)
//                                         localStorage.removeItem("token")
//                                         localStorage.removeItem("logged")
//                                     }} className={` font-sans hover:underline`}>Log Out</Link>
//                                 </div>
//                             </div>
//                         </div>
//                     </div>
//                 </div>


//                 :

//                 <div className="w-full h-full flex items-center justify-center gap-20 pl-10 pr-10">
//                     <div className="select-none hidden md:flex min-w-[400px] max-w-[550px]">
//                         <img src="exam.svg"></img>
//                     </div>
//                     <div className="w-full max-w-xs md:max-w-md flex flex-col gap-10">
//                         <div>
//                             <form className="md:bg-blue-50 md:shadow-md rounded px-12 pb-8 mb-4" onSubmit={handleSubmit}>
//                                 <div className="float-right select-none md:flex min-w-[100px] max-w-[120px] mb-5 mt-5 ">
//                                     <img src="aakhyaanText.png"></img>
//                                 </div>
//                                 {!verification ?
//                                     <>
//                                         <div className="mb-4 clear-both">
//                                             <input className="font-sans shadow appearance-none border focus:outline-blue-600 focus:shadow-none rounded w-full py-2 px-3 text-gray-700 leading-tight" type="text" placeholder="First Name"
//                                                 value={user.firstName}
//                                                 onChange={(e) =>
//                                                     setUser((prev) => {
//                                                         return { ...prev, firstName: e.target.value };
//                                                     })} required />
//                                         </div>
//                                         <div className="mb-4 clear-both">
//                                             <input className="font-sans shadow appearance-none border focus:outline-blue-600 focus:shadow-none rounded w-full py-2 px-3 text-gray-700 leading-tight" type="text" placeholder="Middle Name"
//                                                 value={user.middleName}
//                                                 onChange={(e) =>
//                                                     setUser((prev) => {
//                                                         return { ...prev, middleName: e.target.value };
//                                                     })} />
//                                         </div>
//                                         <div className="mb-4 clear-both">
//                                             <input className="font-sans shadow appearance-none border focus:outline-blue-600 focus:shadow-none rounded w-full py-2 px-3 text-gray-700 leading-tight" type="text" placeholder="Last Name"
//                                                 value={user.lastName}
//                                                 onChange={(e) =>
//                                                     setUser((prev) => {
//                                                         return { ...prev, lastName: e.target.value };
//                                                     })} />
//                                         </div>
//                                         <div className="mb-4">
//                                             <input className="font-sans shadow appearance-none border focus:outline-blue-600 focus:shadow-none rounded w-full py-2 px-3 text-gray-700 leading-tight" type="text" placeholder="School"
//                                                 value={user.school}
//                                                 onChange={(e) =>
//                                                     setUser((prev) => {
//                                                         return { ...prev, school: e.target.value };
//                                                     })} required />
//                                         </div>
//                                         <div className="mb-4">
//                                             <input className="font-sans shadow appearance-none border rounded focus:outline-blue-600 focus:shadow-none w-full py-2 px-3 text-gray-700 leading-tight" type="text" placeholder="Address"
//                                                 value={user.address}
//                                                 onChange={(e) =>
//                                                     setUser((prev) => {
//                                                         return { ...prev, address: e.target.value };
//                                                     })} />
//                                         </div>
//                                         <div className="mb-4">
//                                             <input className="font-sans shadow appearance-none border rounded focus:outline-blue-600 focus:shadow-none w-full py-2 px-3 text-gray-700 leading-tight" type="text" placeholder="Phone"
//                                                 value={user.phone}
//                                                 onChange={(e) =>
//                                                     setUser((prev) => {
//                                                         return { ...prev, phone: e.target.value };
//                                                     })} required />
//                                         </div>
//                                         <div className="mb-4">
//                                             <input className="font-sans shadow appearance-none border rounded focus:outline-blue-600 focus:shadow-none w-full py-2 px-3 text-gray-700 leading-tight" type="text" placeholder="Email"
//                                                 value={user.email}
//                                                 onChange={(e) =>
//                                                     setUser((prev) => {
//                                                         return { ...prev, email: e.target.value };
//                                                     })} required />
//                                         </div>
//                                         <div className="mb-4">
//                                             <input className="font-sans shadow appearance-none border focus:outline-blue-800 focus:shadow-none border-red-500 rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight" type="password" placeholder="Password"
//                                                 value={pass.pass1}
//                                                 onChange={(e) => {
//                                                     setPass({ ...pass, pass1: `${e.target.value}` })
//                                                     setUser((prev) => {
//                                                         return { ...prev, password: e.target.value };
//                                                     })
//                                                 }} required />
//                                         </div>
//                                         <div className="mb-4">
//                                             <input className="font-sans shadow appearance-none border focus:outline-blue-800 focus:shadow-none border-red-500 rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight" type="password" placeholder="Password"
//                                                 value={pass.pass2}
//                                                 onChange={(e) => {
//                                                     setPass({ ...pass, pass2: `${e.target.value}` })
//                                                     setUser((prev) => {
//                                                         return { ...prev, password: e.target.value };
//                                                     })
//                                                 }} required />
//                                         </div>
//                                         <div className="mb-4 font-sans tracking-wide text-center text-red-500">
//                                             {errorMessage}
//                                         </div>
//                                         <div className="flex flex-col gap-5 md:gap-8">
//                                             <button className="font-sans md:w-1/3 text-lg hover:-translate-y-0.5 transition-all bg-blue-500 hover:bg-blue-700 text-white py-2 px-4 rounded focus:outline-none focus:shadow-outline" type="submit">
//                                                 Sign Up
//                                             </button>
//                                             <div className="flex flex-col md:flex-row gap-4 md:gap-2 items-center">
//                                                 <div className="font-sans text-lg text-slate-500 text-center">
//                                                     Already got an account?
//                                                 </div>
//                                                 <Link to="/login" className="font-sans text-xl hover:underline transition-all text-blue-600">
//                                                     Login
//                                                 </Link>
//                                             </div>
//                                         </div>
//                                     </>
//                                     :
//                                     <div className="font-sans clear-both flex flex-col">
//                                         <Link to="/" className="hover:underline mb-5 text-lg text-red-900 tracking-wide">Skip</Link>
//                                         <div className="text-center text-xl font-medium mb-2">Verify Your Email</div>
//                                         <div className="text-center mb-10">A verification token will be sent to the email {user.email}</div>
//                                         <input className="text-center p-1 border-2 border-red-600 md:border-none" type="text" placeholder="Enter the token" onChange={(e) => {
//                                             setToken(e.target.value)
//                                         }} required></input>
//                                         <div className="flex mt-10 relative">
//                                             <button onClick={submitVerification} className="hover:underline">Submit</button>
//                                             <button onClick={resendVerification} className="absolute right-0 hover:underline">Send Again</button>
//                                         </div>

//                                     </div>}
//                             </form>
//                             <p className="text-center text-gray-500 text-xs">
//                                 Aakhyaan © 2022 aakhyaan.org. All Rights Reserved
//                             </p>
//                         </div>
//                     </div>
//                 </div>
//             }

//         </>
//     );
// }

// export default Login;



























